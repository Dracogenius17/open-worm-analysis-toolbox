# The movement_validation Travis-CI build configuration file
#
# The original template for this .travis.yml came from 
# https://gist.github.com/dan-blanchard/7045057

language: python
python:
  # So we can install python-opencv via apt-get (in Python 2.7),
  # we must make the global site packages directory visible to the virtualenv
  # Travis has set up, since Travis by default isolates this virtualenv from 
  # the system packages.  I learned this from:
  # http://danielnouri.org/notes/2012/11/23/use-apt-get-to-install-python-dependencies-for-travis-ci/
  # e.g.
  # https://github.com/dnouri/nolearn/commit/f3567e22878abfc9f29e75b6a4d9e6b1d2bdcd7a#diff-354f30a63fb0907d4ad57269548329e3
  # See the updated way of doing things here: https://github.com/travis-ci/travis-ci/issues/2219
  - "2.7_with_system_site_packages"
notifications:
  email: false

env:
  global:
    # Dependencies
    - DEPS_DIR="`readlink -f $TRAVIS_BUILD_DIR/..`"
    - OPENCV_BUILD_DIR=$DEPS_DIR/opencv/build
 
before_install:
  #http://ryanvarley.uk/solutions/2014/05/14/how-to-solve-travis-ci-matplotlib-tclerror-no-display/
  - "export DISPLAY=:99.0"
  - "sh -e /etc/init.d/xvfb start" 
  - which python
  - python --version
  - cmake --version
  - echo $TRAVIS_PYTHON_VERSION

  # Anaconda installation
  - MINICONDA_DIR=/home/travis/miniconda2
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=$MINICONDA_DIR/bin:$PATH
  - echo $PATH
  - echo $MINICONDA_DIR
  - echo $TRAVIS_PYTHON_VERSION
  
  - conda install --yes python=2.7 atlas numpy scipy matplotlib nose pandas statsmodels h5py seaborn

  - which python
  - python --version

  # INSTALL OPENCV  
    # So apt-get can see python-opencv, we must add these lines, following
    # advice from http://askubuntu.com/questions/339217/unable-to-locate-package-libopencv-dev
  - echo "deb http://de.archive.ubuntu.com/ubuntu precise main restricted universe" | sudo tee -a /etc/apt/sources.list
  - echo "deb-src http://de.archive.ubuntu.com/ubuntu precise restricted main multiverse universe" | sudo tee -a /etc/apt/sources.list
  - echo "deb http://de.archive.ubuntu.com/ubuntu precise-updates main restricted universe" | sudo tee -a /etc/apt/sources.list
  - echo "deb-src http://de.archive.ubuntu.com/ubuntu precise-updates restricted main multiverse universe" | sudo tee -a /etc/apt/sources.list
    # From https://web.archive.org/web/20130620145414/http://www.neuroforge.co.uk/index.php/getting-started-with-python-a-opencv
  - cat /etc/apt/sources.list
  - sudo apt-get install python-software-properties
  - sudo add-apt-repository python-opencv
    # This tested and worked on an Ubuntu Amazon AMI:
  - sudo apt-get install python-opencv
    # After doing an "import cv2" you will get the following message:
    # "libdc1394 error: Failed to initialize libdc1394".
    # This is apparently a camera driver, so we don't care,
    # So following http://stackoverflow.com/questions/12689304/,
    # Let's suppress the message with:
  - sudo ln /dev/null /dev/raw1394
    # Let's print out what version of OpenCV we've installed, following
    # http://stackoverflow.com/questions/11273459/how-do-i-install-opencv
  - apt-cache policy python-opencv

  # Is this still an issue? Can we remove it? - @JimHokanson, 2015/06/15
  # The next couple lines fix a crash with multiprocessing on Travis and 
  # are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm

  # Create a valid user_config.py file for movement_validation
  - sudo /bin/cp $TRAVIS_BUILD_DIR/movement_validation/travis_config.txt $TRAVIS_BUILD_DIR/movement_validation/user_config.py

before_script:
  - mkdir $TRAVIS_BUILD_DIR/example_data
  - cd $TRAVIS_BUILD_DIR/example_data
  # TODO: Presumably the initial address could be a variable
  - wget "https://googledrive.com/host/0B7to9gBdZEyGNWtWUElWVzVxc0E/example_contour_and_skeleton_info.mat" -O example_contour_and_skeleton_info.mat
  - wget "https://drive.google.com/uc?export=download&id=0B7to9gBdZEyGX2tFQ1JyRzdUYUE" -O example_video_feature_file.mat
  - wget "https://drive.google.com/uc?export=download&id=0B7to9gBdZEyGakg5U3loVUktRm8" -O example_video_norm_worm.mat
  # TODO: Presumably we could run some command on the directory
  # This may no longer be necessary, found other bugs ...
  - ls -l
  - chmod 777 example_contour_and_skeleton_info.mat
  - chmod 777 example_video_feature_file.mat
  - chmod 777 example_video_norm_worm.mat
  - pwd
  - ls -l
 
# Run test
script:
  - cd $TRAVIS_BUILD_DIR/tests
  - pwd
  - nosetests --nocapture
