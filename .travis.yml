# Courtesy https://gist.github.com/dan-blanchard/7045057

language: python
python:
  #- 2.7
  #Open CV isn't working with 3.3 for some reason ...
  - 3.3
  #- 3.4
notifications:
  email: false

env:
  global:
    # Dependencies
    - DEPS_DIR="`readlink -f $TRAVIS_BUILD_DIR/..`"
    - OPENCV_BUILD_DIR=$DEPS_DIR/opencv/build
    #This will obviously need to be made generic ...
    #- MINICONDA_DIR=/home/travis/virtualenv/python3.3.5
    #THis is the python 2.7 version ...
    #- MINICONDA_DIR=/home/travis/miniconda
    #Is this the path for miniconda3?
    - MINICONDA_DIR=/home/travis/miniconda3
 
before_install:
  - which python
  - python --version
  - cmake --version
  

  # Anaconda installation
  - wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh
  #- wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - chmod +x miniconda.sh
  - ./miniconda.sh -b
  - export PATH=$MINICONDA_DIR/bin:$PATH
  #- conda update --yes conda
  
  #Need to install the actual Python version, does this work?
  #To get the correct version you have to do a conda install
  #Old versions are at: http://repo.continuum.io/miniconda/ but don't match Python versions
  #and it seems like continuum doesn't want you to try and match
  - conda install --yes python=$TRAVIS_PYTHON_VERSION atlas numpy scipy matplotlib nose dateutil pandas statsmodels h5py shapely
  
  - which python
  - python --version
  
  #OpenCV
  #------
  #JAH: Anaconda doesn't support conda install opencv & binstart wasn't working
  #so instead we download and build from source. The only other trick is making
  #sure we move the correct files to the correct Python installation, which is 
  #done via specifying PYTHON_PACKAGES_PATH
  #
  #References:
  #https://github.com/kevin-brown/blog.kevin-brown.com/blob/2d5296a8c1ac76dc5cbd2b98d765749c043fc521/_posts/2014-09-27-building-and-installing-opencv-3.markdown
  #https://github.com/kashefy/elm/blob/76dbd0214dbab91a7de3bdd94767ef08aa67d0f4/.travis.yml
  #1) Get from source, currently master is v3.0.0 (supporting Python 3)
  - travis_retry git clone --depth 1 https://github.com/Itseez/opencv.git $DEPS_DIR/opencv
  - mkdir $OPENCV_BUILD_DIR && cd $OPENCV_BUILD_DIR
  #- git checkout tags/3.0.0
  #http://answers.opencv.org/question/17536/install-opencv-for-anaconda-ipython/
  #- cmake -D PYTHON_LIBRARY=$MINICONDA_DIR/lib/libpython3.3.so -D PYTHON_INCLUDE_DIR=$MINICONDA_DIR/include/python3.3/ -D PYTHON_INCLUDE_DIR2=$MINICONDA_DIR/include/python3.3 -D PYTHON_PACKAGES_PATH=$MINICONDA_DIR/lib/python3.3/site-packages/ -D BUILD_opencv_python3=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -DBUILD_SHARED_LIBS=OFF -DBUILD_DOCS=OFF -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DBUILD_EXAMPLES=OFF -DBUILD_opencv_ts=OFF -DBUILD_opencv_gpu=OFF -DBUILD_opencv_java=OFF -DBUILD_opencv_calib3d=OFF -DBUILD_opencv_stitching=OFF $DEPS_DIR/opencv ..
  # - make
  #- sudo make install
  
  #https://scivision.co/anaconda-python-opencv3/
  #------------------------------------------
  #- cmake -DBUILD_TIFF=ON -DBUILD_opencv_java=OFF -DWITH_CUDA=OFF -DENABLE_AVX=ON -DWITH_OPENGL=ON -DWITH_OPENCL=ON -DWITH_IPP=ON -DWITH_TBB=ON -DWITH_EIGEN=ON -DWITH_V4L=ON -DBUILD_TESTS=OFF -DBUILD_PERF_TESTS=OFF -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_PREFIX=$(python3 -c "import sys; print(sys.prefix)") -DPYTHON_EXECUTABLE=$(which python3) -DPYTHON_INCLUDE_DIR=$(python3 -c "from distutils.sysconfig import get_python_inc; print(get_python_inc())") -DPYTHON_PACKAGES_PATH=$(python3 -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())") ..
  #- make -j4
  #- sudo make install
  
  #https://gist.github.com/itguy51/4239282
  #------------------------------------------
  - echo "/usr/local/lib" | sudo tee -a /etc/ld.so.conf.d/opencv.conf
  - sudo ldconfig
  - echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/usr/local/lib/pkgconfig" | sudo tee -a /etc/bash.bashrc
  - echo "export PKG_CONFIG_PATH" | sudo tee -a /etc/bash.bashrc
  - export PYTHONPATH=$OPENCV_BUILD_DIR/lib/python3.3/site-packages:$PYTHONPATH 

  #JAH: Is this still an issue? Can we remove it? 2015/06/15
  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  - sudo rm -rf /dev/shm
  - sudo ln -s /run/shm /dev/shm
  - sudo /bin/cp $TRAVIS_BUILD_DIR/movement_validation/travis_config.txt $TRAVIS_BUILD_DIR/movement_validation/user_config.py

  # Install packages
#install:
  
  #opencv 3 via hadim, need -y to say yes to prompts
  #- conda install -y -c https://conda.binstar.org/hadim opencv
  # Coverage packages are on my binstar channel
  # The next line currently fails with the error "Error: Unsatisfiable package specifications.  
  #                                               Hint: the following packages conflict with each other:
  #                                               - nose-cov
  #                                               - python 3.4*   "
  #- conda install --yes -c dan_blanchard python-coveralls nose-cov
#  - python setup.py install

before_script:
  - mkdir $TRAVIS_BUILD_DIR/example_data
  - cd $TRAVIS_BUILD_DIR/example_data
  - wget https://drive.google.com/file/d/0B7to9gBdZEyGX2tFQ1JyRzdUYUE -O example_video_feature_file.mat
  - wget https://drive.google.com/file/d/0B7to9gBdZEyGakg5U3loVUktRm8 -O example_video_norm_worm.mat
  - pwd
  - ls
 
# Run test
script:
  - cd $TRAVIS_BUILD_DIR/tests
  - pwd
  - nosetests --nocapture
#  - nosetests --with-cov --cov YOUR_PACKAGE_NAME_HERE --cov-config .coveragerc --logging-level=INFO

 
# Calculate coverage
#after_success:
#  - coveralls --config_file .coveragerc
